version: '3.8'

services:
  # Base de datos PostgreSQL con extensión vector
  postgres:
    image: pgvector/pgvector:pg15
    container_name: horuslm-postgres
    environment:
      POSTGRES_DB: horuslm
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - horuslm-network

  # Redis para cache y sesiones
  redis:
    image: redis:7-alpine
    container_name: horuslm-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - horuslm-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: horuslm-backend
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres123@postgres:5432/horuslm
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-this
      - OLLAMA_BASE_URL=http://ollama:11434
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./uploads:/app/uploads
      - ./audio:/app/audio
      - ./logs:/app/logs
    networks:
      - horuslm-network

  # Frontend React
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: horuslm-frontend
    environment:
      - VITE_API_URL=http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - horuslm-network

  # Ollama para modelos locales - configuración compatible con WSL
  ollama:
    image: ollama/ollama:latest
    container_name: horuslm-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - horuslm-network
    # Configuración para WSL sin GPU
    # Para habilitar GPU en sistemas compatibles (no WSL), descomenta las siguientes líneas:
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: all
    #           capabilities: [gpu]

  # Nginx como proxy reverso
  nginx:
    image: nginx:alpine
    container_name: horuslm-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - horuslm-network

volumes:
  postgres_data:
  redis_data:
  ollama_data:

networks:
  horuslm-network:
    driver: bridge